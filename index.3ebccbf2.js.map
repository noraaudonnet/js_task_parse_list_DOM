{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAsB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEtD,SAAS,EAAc,CAAM,EAC3B,MAAO,CAAC,EAAO,OAAO,CAAC,QAAS,GAClC,EAqBA,AAnBA,SAAkB,CAAI,EAKpB,IAAK,IAJC,EAAa,EAAK,IAAI,CAC1B,SAAC,CAAA,CAAG,CADN,EACY,OAAA,EAAc,EAAE,OAAO,CAAC,MAAM,EAAI,EAAc,EAAE,OAAO,CAAC,MAAM,C,GAGnE,EAAI,EAAG,EAAI,EAAW,MAAM,CAAE,IACrC,SAAS,aAAa,CAAC,MAAM,MAAM,CAAC,CAAU,CAAC,EAAE,CAErD,EAWS,GARA,AASI,EATC,GAAG,CAAC,SAAC,CAAjB,EAA2B,MAAA,CACzB,KAAM,EAAK,SAAS,CACpB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar listOfEmployees = _to_consumable_array(document.querySelectorAll(\"li\"));\nfunction convertSalary(salary) {\n    return +salary.replace(/[$,]/g, \"\");\n}\nfunction sortList(list) {\n    var sortedList = list.sort(function(a, b) {\n        return convertSalary(b.dataset.salary) - convertSalary(a.dataset.salary);\n    });\n    for(var i = 0; i < sortedList.length; i++)document.querySelector(\"ul\").append(sortedList[i]);\n}\nfunction getEmployees(list) {\n    return list.map(function(item) {\n        return {\n            name: item.innerText,\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: item.dataset.age\n        };\n    });\n}\nsortList(listOfEmployees);\ngetEmployees(listOfEmployees);\n\n//# sourceMappingURL=index.3ebccbf2.js.map\n","'use strict';\n\nconst listOfEmployees = [...document.querySelectorAll('li')];\n\nfunction convertSalary(salary) {\n  return +salary.replace(/[$,]/g, '');\n}\n\nfunction sortList(list) {\n  const sortedList = list.sort(\n    (a, b) => convertSalary(b.dataset.salary) - convertSalary(a.dataset.salary),\n  );\n\n  for (let i = 0; i < sortedList.length; i++) {\n    document.querySelector('ul').append(sortedList[i]);\n  }\n}\n\nfunction getEmployees(list) {\n  return list.map((item) => ({\n    name: item.innerText,\n    position: item.dataset.position,\n    salary: item.dataset.salary,\n    age: item.dataset.age,\n  }));\n}\n\nsortList(listOfEmployees);\ngetEmployees(listOfEmployees);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","listOfEmployees","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","convertSalary","salary","replace","sortList","list","sortedList","sort","a","b","dataset","querySelector","append","map","item","innerText","position","age"],"version":3,"file":"index.3ebccbf2.js.map"}